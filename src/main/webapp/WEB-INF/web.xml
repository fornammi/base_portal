<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>OSPM</display-name>

	<!--Spring配置文件的路径-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:context/applicationContext.xml
        </param-value>
	</context-param>
	
	<!-- session超时过滤器	begin -->
	<!-- filter元素位于部署描述符文件（web.xml）的前部，所有filter-mapping、servlet或servlet-mapping元素之前 -->
	<!-- 
	<filter>
		<filter-name>sessionFilter</filter-name>
		<filter-class>nammi.base.filter.SessionFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	 -->
	<!-- session超时过滤器	end -->

	<!-- 著名 Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	
	<!-- dispatcher		begin -->
	<servlet>
		<servlet-name>spring-mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<description>加载Spring MVC的配置文件</description>
			<param-name>contextConfigLocation</param-name>
			<!-- 初始化 DispatcherServlet 时，该框架在 web 应用程序WEB-INF 目录中
			寻找一个名为[servlet-名称]-servlet.xml的文件，并在那里定义相关的Beans，
			重写在全局中定义的任何Beans，像上面的web.xml中的代码，对应的是dispatcher-servlet.xml；
			当然也可以使用<init-param>元素，手动指定配置文件的路径； -->
			<param-value>classpath:context/common/applicationContext-servlets.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- 所有的.htm的请求，都会被DispatcherServlet处理 -->
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>
	<!-- dispatcher		end -->
	
	<!-- log4j配置 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/properties/log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- struts2 滤镜配置  -->
	<!-- <filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>
				struts-default.xml,
				struts-plugin.xml,
				com/bless/common/struts2/struts.xml,
        	</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->


	<!--Spring ApplicationContext 载入 ，必须-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<!-- 支持Freemarker等模板 -->
	<!-- <servlet>
        <servlet-name>JspSupportServlet</servlet-name>
        <servlet-class>
            org.apache.struts2.views.JspSupportServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet> -->
    
    <!-- session超时定义,单位为分钟：不会自动跳转 -->
    <session-config>
        <session-timeout>1</session-timeout>
    </session-config>
    
	
	<!-- 当访问的页面不存在时跳转的提示页面 -->
	<error-page>
		<error-code>404</error-code>
		<location>/ftl/login/error.html</location>
	</error-page>
    <error-page>
		<error-code>401</error-code>
		<location>/ftl/login/error.html</location>
	</error-page>
	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
</web-app>