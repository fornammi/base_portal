<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd">
	
    <!-- 方式1——bean定义启动注解：【Spring2.5】	begin -->
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
    <!-- 没找到如何给AnnotationMethodHandlerAdapter配置自定义Interceptor的方法，但是有个customArgumentResolver
    	可以利用一下，来充当Interceptor。 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	    <!-- DefaultAnnotationHandlerMapping:本身支持自定义拦截器 -->
    	<property name="interceptors">
    		<list>
    			<bean class="nammi.login.interceptor.LoginInterceptor" />
    		</list>
    	</property>
    </bean>
    <!-- 【Spring2.5】	end -->
    
    <!-- 方式2——注解驱动启动：【Spring3.*】	begin -->
    <!-- 相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，配置
    	一些messageconverter。即解决了@Controller注解的使用前提配置。 -->
    <!-- mvc:annotation-driven后，缺省使用DefaultAnnotationHandlerMapping 来注册handler method和request的
		mapping关系,AnnotationMethodHandlerAdapter用来在实际调用handler method前对其参数进行处理 -->
    <!-- <mvc:annotation-driven /> -->
    <!-- 【Spring3.*】	end -->
	    
	
	<!--/**[说明：在扫描前，方式1、2必选一种]**/  -->
	
	<!-- 使Spring支持自动检测组件，设置使用注解的类所在的包-->
    <context:component-scan base-package="nammi.*.controller"/>
	<!-- 启用spring mvc 注解:有<context:component-scan>则不需要此标签 -->
	<!-- 对包进行扫描，实现注释驱动Bean定义，同时将bean自动注入容器中使用。即解决了@Controller标识的类的bean的注入和使用。 -->
    <!-- <context:annotation-config/> -->
    
    
    <!-- 配置mvc的拦截器 可以配置多个:其中mvc为在 beans标签里定义的Schema -->
    <!-- <mvc:interceptors>
    	国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 
    	<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
    	如果不定义 mvc:mapping path,将拦截所有的URL请求
   		
    	<mvc:interceptor>
    		<mvc:mapping path="">
    			<bean class="nammi.login.interceptor.LoginInterceptor" />
    		</mvc:mapping>
    	</mvc:interceptor>
    	
    </mvc:interceptors> -->
	
	<!-- 定义进入Controller后默认执行的方法名 -->
	<!-- <bean id="paramResolver"
		class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
		<property name="paramName" value="method" />
		<property name="defaultMethodName">
			<value>index</value>
		</property>
	</bean> -->

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<!-- normal viewResolver	begin-->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.JstlView</value>
		</property>
		<property name="prefix">
			<value>/WEB-INF/view/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean> -->
	<!-- normal viewResolver	end-->
	
	
	<!-- freemarker viewResolver	begin-->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="requestContextAttribute" value="rc" />
		<property name="cache">
			<value>true</value>
		</property>
		<property name="suffix">
			<value>.html</value>
		</property>
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="contentType">
			<value>text/html; charset=UTF-8</value>
		</property>
	</bean>
	
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<!-- 配置视图的时候最后有斜杠，在RequestMapping注解中不用再用斜杠开始 -->
			<value>/WEB-INF/ftl/</value>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="locale">zh_CN</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="number_format">0.################</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<entry key="imgRoot" value="/base-portal" />
			</map>
		</property>
	</bean>
	<!-- freemarker viewResolver	end-->


	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

</beans>